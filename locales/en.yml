en:
  vagrant:
    errors:
      url_validation_error: |-
        Download URL is not accessible.
        Possible reason: Invalid version name

  servicemanager:
    synopsis: |-
      provides the IP address:port and tls certificate file location for a docker daemon
    machine_should_running: |-
      The virtual machine must be running before you execute this command.
      Try this in the directory with your Vagrantfile:
      vagrant up

#-------------------------------------------------------------------------------
# Translations for config validation errors
#-------------------------------------------------------------------------------
    config:
      supported_devices: |-
        services should be subset of %{services}.
#-------------------------------------------------------------------------------
# Translations for commands. e.g. `vagrant x`
#-------------------------------------------------------------------------------
    commands:
      help:
        default: |-
          Usage: vagrant service-manager <command> [options]

          Commands:
               env          displays connection information for services in the box
               box          displays box related information like version, release, IP etc
               restart      restarts the given service in the box
               start        starts the given service in the box
               stop         stops the given service in the box
               status       list services and their running state
               install-cli  install the client binary for the specified service

          Options:
               -h, --help   print this help

          For help on any individual command run `vagrant service-manager COMMAND -h`
        env: |-
          Usage: vagrant service-manager env [object] [options]

          Objects:
                docker      display information and environment variables for docker
                openshift   display information and environment variables for openshift

          If OBJECT is omitted, display the information for all active services

          Options:
                --script-readable  display information in a script readable format.
                -h, --help         print this help
        box: |-
          Usage: vagrant service-manager box <sub-command> [options]

          Sub-Command:
                version    display version and release information about the running VM
                ip         display routable IP address of the running VM

          Options:
                --script-readable  display information in a script readable format
                -h, --help         print this help

          Examples:
                vagrant service-manager box version
                vagrant service-manager box version --script-readable
                vagrant service-manager box ip
                vagrant service-manager box ip --script-readable
        status: |-
          Usage: vagrant service-manager status [service] [options]

          Options:
                -h, --help         print this help

          If a service is provided, only that service is reported.
          If no service is provided only supported orchestrators are reported.

          Example:
                vagrant service-manager status openshift
        operation: |-
          %{operation}s the service

          Usage: vagrant service-manager %{operation} <service> [options]

          Service:
              A service provided by sccli. For example:
               docker, kubernetes, openshift etc

          Options:
                -h, --help         print this help

          Examples:
            vagrant service-manager %{operation} docker
        install_cli: |-
          Install the client binary for the specified service

          Usage: vagrant service-manager install-cli [service] [options]

          Service:
            A supported service. For example: docker, kubernetes or openshift.

          Options:
                -h, --help         print this help

          Example:
                vagrant service-manager install-cli docker

      env:
        docker:
          windows: |-
            # Set the following environment variables to enable access to the
            # docker daemon running inside of the vagrant virtual machine:
            setx DOCKER_HOST tcp://%{ip}:%{port}
            setx DOCKER_CERT_PATH %{path}
            setx DOCKER_TLS_VERIFY 1
            setx DOCKER_API_VERSION %{api_version}
          non_windows: |-
            # Set the following environment variables to enable access to the
            # docker daemon running inside of the vagrant virtual machine:
            export DOCKER_HOST=tcp://%{ip}:%{port}
            export DOCKER_CERT_PATH=%{path}
            export DOCKER_TLS_VERIFY=1
            export DOCKER_API_VERSION=%{api_version}
          windows_cygwin: |-
            # Set the following environment variables to enable access to the
            # docker daemon running inside of the vagrant virtual machine:
            export DOCKER_HOST=tcp://%{ip}:%{port}
            export DOCKER_CERT_PATH='%{path}'
            export DOCKER_TLS_VERIFY=1
            export DOCKER_API_VERSION=%{api_version}
          script_readable: |-
            DOCKER_HOST=tcp://%{ip}:%{port}
            DOCKER_CERT_PATH='%{path}'
            DOCKER_TLS_VERIFY=1
            DOCKER_API_VERSION=%{api_version}
        openshift:
          windows: |-
            # You can access the OpenShift console on: %{openshift_console_url}
            # To use OpenShift CLI, run: oc login %{openshift_url}
            setx OPENSHIFT_URL %{openshift_url}
            setx OPENSHIFT_WEB_CONSOLE %{openshift_console_url}
            setx DOCKER_REGISTRY %{docker_registry}
          non_windows: |-
            # You can access the OpenShift console on: %{openshift_console_url}
            # To use OpenShift CLI, run: oc login %{openshift_url}
            export OPENSHIFT_URL=%{openshift_url}
            export OPENSHIFT_WEB_CONSOLE=%{openshift_console_url}
            export DOCKER_REGISTRY=%{docker_registry}
          windows_cygwin: |-
            # You can access the OpenShift console on: %{openshift_console_url}
            # To use OpenShift CLI, run: oc login %{openshift_url}
            export OPENSHIFT_URL=%{openshift_url}
            export OPENSHIFT_WEB_CONSOLE=%{openshift_console_url}
            export DOCKER_REGISTRY=%{docker_registry}
          script_readable: |-
            OPENSHIFT_URL=%{openshift_url}
            OPENSHIFT_WEB_CONSOLE=%{openshift_console_url}
            DOCKER_REGISTRY=%{docker_registry}
        windows_cygwin_configure_info: |-
            # run following command to configure your shell:
            # eval "$(VAGRANT_NO_COLOR=1 vagrant service-manager env%{command} | tr -d '\r')"
        unix_configure_info: |-
          # run following command to configure your shell:
          # eval "$(vagrant service-manager env%{command})"
        service_not_running: |-
          # %{name} service is not running in the vagrant box.
      operation:
        service_missing: 'Service name missing'
        sccli_only_support: |-
          Only sccli services are supported. For example:
            docker, openshift and kubernetes

      install_cli:
        message: |-
          # Binary %{when} available at %{path}
          # run binary as:
          # %{binary} <command>
          export PATH=%{dir}:$PATH

          # run following command to configure your shell:
          # eval "$(VAGRANT_NO_COLOR=1 vagrant service-manager install-cli %{service} | tr -d '\r')"
        unsupported_box: |-
          The CDK does not support client binary installs via the 'install-cli' command.
          Please visit access.redhat.com to download client binaries.
        service_not_enabled: |-
          '%{service}' service is not enabled.

      status:
        nil: |-
          Configured services:
        status:
          running: running
          stopped: stopped
        unsupported_service: |-
          Unknown service '%{service}'.
          Supported services are %{services}.
